/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define THINGS 1
#define HMM 2

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&gresc>;
            layers = <BASE>;
        };
        combo_backspace {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BACKSPACE>;
            layers = <BASE>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
    &kp Q      &kp W      &kp E       &kp R       &kp T  &kp Y  &kp U       &kp I       &kp O      &kp P
    &kp A      &kp S      &kp D       &kp F       &kp G  &kp H  &kp J       &kp K       &kp L      &kp ENTER
    &kp Z                 &kp X       &kp C       &kp V  &kp B  &kp N       &kp M       &kp COMMA  &kp DOT
    &mt LSHFT LEFT_CONTROL      &kp A      &none          &none          &lt THINGS SPACE               &none       &kp G      &kp FSLH
            >;
        };
        THINGS {
            bindings = <
    &kp N1     &kp N2     &kp N3     &kp N4     &kp N5 &kp N6 &kp N7     &kp N8     &kp N9     &kp N10
    &trans     &trans     &trans     &trans     &trans &trans &trans     &trans     &trans     &trans
    &trans                &trans     &trans     &trans &trans &trans     &trans     &trans     &trans
    &trans     &trans     &none        &none        &trans               &none      &trans     &trans
            >;
        };

    HMM {
            bindings = <
    &trans     &trans     &trans     &trans     &trans &trans &trans     &trans     &trans     &trans
    &trans     &trans     &trans     &trans     &trans &trans &trans     &trans     &trans     &trans
    &trans                &trans     &trans     &trans &trans &trans     &trans     &trans     &trans
    &trans     &trans     &none        &none        &trans               &none      &trans     &trans
            >;
        };
    };
};